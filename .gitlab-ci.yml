stages:
  - build
  - test
  - docker

variables:
  _IMAGE_PATH: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/api

  MAVEN_IMAGE: maven:3-amazoncorretto-21

  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--settings mvn_ci_settings.xml --batch-mode --errors --fail-at-end"

  DEVELOP_IMAGE_TAG: $_IMAGE_PATH:develop
  RELEASE_IMAGE_TAG: $_IMAGE_PATH:$CI_COMMIT_TAG

  NETZHAUT_DOCKER_HOST: 172.17.0.1

cache:
  paths:
    - ".m2/repository"

default:
  tags:
    - docker

build:
  image: $MAVEN_IMAGE
  stage: build
  script:
    - mvn compile $MAVEN_OPTS
  artifacts:
    paths:
      - target/
    expire_in: 30 min

test_job:
  image: docker:latest
  stage: test
  script:
    - apk add --no-cache openjdk21-jre maven
    - docker compose -f src/mock-licence-servers/docker-compose.yml up --build --wait
    - mvn test $MAVEN_OPTS
    - mvn test -Dspring.profiles.active=local $MAVEN_OPTS
  after_script:
    - docker compose -f src/mock-licence-servers/docker-compose.yml down

docker_job:
  image: $MAVEN_IMAGE
  stage: docker
  only:
    - develop
  script:
    - mvn $MAVEN_CLI_OPTS spring-boot:build-image
      -DskipTests=true
      -Ddocker.registry.username=gitlab-ci-token
      -Ddocker.registry.password=$CI_JOB_TOKEN
      -Ddocker.registry.url=$CI_REGISTRY
      -Dspring-boot.build-image.publish=true
      -Dspring-boot.build-image.imageName=$DEVELOP_IMAGE_TAG
