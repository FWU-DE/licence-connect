stages:
  - build
#  - test
  - docker
#  - release

variables:
  IMAGE_NAME: licence-connect
  MAVEN_IMAGE: maven:3-amazoncorretto-21

  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--settings mvn_ci_settings.xml --batch-mode --errors --fail-at-end"
  MAVEN_CLI_TEST_OPTS: "-Dspring.profiles.active=auto-start-mocks"

  LATEST_IMAGE_TAG: "$CI_REGISTRY/licenceconnect/api/$IMAGE_NAME:develop"
  RELEASE_IMAGE_TAG: "$CI_REGISTRY/licenceconnect/api/$IMAGE_NAME:$CI_COMMIT_TAG"

cache:
  paths:
    - ".m2/repository"

default:
  image: $MAVEN_IMAGE
  tags:
    - docker

build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS compile
  artifacts:
    paths:
      - target/
    expire_in: 30 min

#run_tests:
#  stage: test
#  script:
#    - mvn $MAVEN_CLI_OPTS test $MAVEN_CLI_TEST_OPTS

docker_build_latest:
  stage: docker
  script:
    - mvn $MAVEN_CLI_OPTS spring-boot:build-image
      -DskipTests=true
      -Ddocker.publishRegistry.username=gitlab-ci-token
      -Ddocker.publishRegistry.password=$CI_JOB_TOKEN
      -Ddocker.publishRegistry.url=$CI_REGISTRY
      -Dspring-boot.build-image.publish=true
      -Dspring-boot.build-image.imageName=$LATEST_IMAGE_TAG
  only:
    - develop

#docker_release_tag:
#  stage: release
#  script:
#    - mvn $MAVEN_CLI_OPTS spring-boot:build-image
#      -DskipTests=true
#      -Ddocker.image.name=$RELEASE_IMAGE_TAG
#      -Ddocker.registry.username=gitlab-ci-token
#      -Ddocker.registry.password=$CI_JOB_TOKEN
#      -Ddocker.registry.url=$CI_REGISTRY
#      -Ddocker.publish=true
#  only:
#    - tags
