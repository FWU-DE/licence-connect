services:
  nginx:
    image: nginx:latest
    container_name: lc-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/config/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      licence-connect:
        condition: service_started
      lc-halt:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://licence-connect:8080/v1/healthcheck && curl -f http://lc-halt:80/health"]
      interval: 5s
      timeout: 5s
      retries: 100

  licence-connect:
    image: gitcr.fwu.de/licenceconnect/api:latest
    pull_policy: always
    container_name: licence-connect
    restart: unless-stopped
    env_file: ../.env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:h2:file:/workspace/data/database.h2;DB_CLOSE_ON_EXIT=FALSE
    volumes:
      - ${DB_FILE_PATH:-./db}:/workspace/data
    expose:
      - "8080"

  lc-halt:
    image: gitcr.fwu.de/licenceconnect/api/lc-halt:latest
    pull_policy: always
    container_name: lc-halt
    env_file: ../.env
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy

  mongodb:
    image: mongo:8.0
    container_name: mongodb
    env_file: ../.env
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./lc-halt-db:/data/db
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27017", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 10s
      retries: 5

  loki:
    profiles: [debug]
    image: grafana/loki:latest
    container_name: lc-loki
    expose:
      - "3100"

  grafana:
    profiles: [debug]
    image: grafana/grafana:latest
    container_name: lc-debug-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      # With this volume, we can persist the data in local development even if the container is removed.
      # This is useful because it removes the need to re-add the Loki datasource every time you start the container.
      - ./grafana_data:/var/lib/grafana
